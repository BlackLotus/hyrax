     <div id="fileupload">
        <!-- Redirect browsers with JavaScript disabled to the origin page -->
        <noscript><input type="hidden" name="redirect" value="<%= main_app.root_path %>"></noscript>
        <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
        <div class="row fileupload-buttonbar">
            <div class="col-lg-7">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Add files...</span>
                    <input type="file" name="files[]" multiple>
                </span>
                <button type="submit" class="btn btn-primary start">
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start upload</span>
                </button>
                <button type="reset" class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel upload</span>
                </button>
                <button type="button" class="btn btn-danger delete">
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <!-- The global file processing state -->
                <span class="fileupload-process"></span>
            </div>
            <!-- The global progress state -->
            <div class="col-lg-5 fileupload-progress fade">
                <!-- The global progress bar -->
                <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                    <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                </div>
                <!-- The extended global progress state -->
                <div class="progress-extended">&nbsp;</div>
            </div>
        </div>
        <!-- The table listing the files available for upload/download -->
        <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
     </div>

<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <span class="preview"></span>
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
            <strong class="error text-danger"></strong>
        </td>
        <td>
            <p class="size">Processing...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
                <button class="btn btn-primary start" disabled>
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start</span>
                </button>
            {% } %}
            {% if (!i) { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{%

    // I am not happy with this global declaration.
    // Using "var setAllResourceTypes" or "function setAllResourceTypes()" does not work. Not sure why.
    // Perhaps this kind of declaration is not a problem due to the way the JavaScript is executed???
    setAllResourceTypes = function() {
        var firstResourceType = $(".resource_type_dropdown")[0].value;
        $(".resource_type_dropdown").each(function(index, element) {
            element.value = firstResourceType;
        });
    };

    for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
        <td>
          <div class="row">
            <div class="col-sm-6 name">
                <span>{%=file.name%}</span>
                <input type="hidden" name="uploaded_files[]" value="{%=file.id%}">
            </div>
            <div class="col-sm-6">
              {% if (file.error) { %}
                  <div><span class="label label-danger">Error</span> {%=file.error%}</div>
              {% } %}
              <span class="size">{%=o.formatFileSize(file.size)%}</span>
              <button class="btn btn-warning cancel pull-right">
                  <i class="glyphicon glyphicon-ban-circle" aria-hidden="true"></i>
                  <span>Cancel</span>
              </button>
            </div>
          </div>
          <div class="row">
            <div class="col-sm-12 form-horizontal">
              <div class="form-group">
                <label for="title_{%=file.id%}" class="col-sm-5 control-label">Display label</label>
                <div class="col-sm-7">
                  <input type="text" class="form-control" name="title[{%=file.id%}]" id="title_{%=file.id%}" value="{%=file.name%}">
                </div>
                <label for="resource_type_{%=file.id%}" class="col-sm-5 control-label">Resource Type</label>
                <div class="col-sm-7">
                  <select class="form-control resource_type_dropdown" name="resource_type[{%=file.id%}]" id="resource_type_{%=file.id%}" value="{%=file.name%}">
                    <% Sufia.config.resource_types.each do |type| %>
                        <option value="<%= type[0] %>"><%= type[1] %></option>
                    <% end %>
                  </select>
                  <!-- TODO: Why is the button drawn for all files? -->
                  {% if (i == 0) { %}
                    <button class="btn pull-right resource_type_button" onClick="setAllResourceTypes(); return false;">Set all to this Resource Type</button>
                  {% } %}
                </div>
              </div>
            </div>
          </div>
        </td>
    </tr>
{% } %}
</script>
